--- a/net/minecraft/src/World.java
+++ b/net/minecraft/src/World.java
@@ -8,6 +8,7 @@
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.HashSet;
+import java.util.Iterator;
 import java.util.List;
 import java.util.Random;
 import java.util.Set;
@@ -1543,7 +1544,58 @@
    }
 
    protected void tickBlocksAndAmbiance() {
-      // $FF: Couldn't be decompiled
+      this.activeChunkSet.clear();
+      for(int i = 0; i < playerEntities.size(); i++) {
+         EntityPlayer entityplayer = (EntityPlayer)playerEntities.get(i);
+         int j = MathHelper.floor_double(entityplayer.posX / 16D);
+         int l = MathHelper.floor_double(entityplayer.posZ / 16D);
+         byte byte0 = 9;
+         for(int j1 = -byte0; j1 <= byte0; j1++) {
+            for(int i2 = -byte0; i2 <= byte0; i2++) {
+               this.activeChunkSet.add(new ChunkCoordIntPair(j1 + j, i2 + l));
+            }
+         }
+      }
+
+      if(ambientTickCountdown > 0) {
+         ambientTickCountdown--;
+      }
+      for(Iterator iterator = activeChunkSet.iterator(); iterator.hasNext();) {
+         ChunkCoordIntPair chunkcoordintpair = (ChunkCoordIntPair)iterator.next();
+         int k = chunkcoordintpair.chunkXPos * 16;
+         int i1 = chunkcoordintpair.chunkZPos * 16;
+         Chunk chunk = getChunkFromChunkCoords(chunkcoordintpair.chunkXPos, chunkcoordintpair.chunkZPos);
+         if(ambientTickCountdown == 0) {
+            updateLCG = updateLCG * 3 + DIST_HASH_MAGIC;
+            int k1 = updateLCG >> 2;
+            int j2 = k1 & 0xf;
+            int l2 = k1 >> 8 & 0xf;
+            int j3 = k1 >> 16 & 0x7f;
+            int l3 = chunk.getBlockID(j2, j3, l2);
+            j2 += k;
+            l2 += i1;
+            if(l3 == 0 && getBlockLightValue(j2, j3, l2) <= rand.nextInt(8) && getSavedLightValue(EnumSkyBlock.Sky, j2, j3, l2) <= 0) {
+               EntityPlayer entityplayer1 = getClosestPlayer((double)j2 + 0.5D, (double)j3 + 0.5D, (double)l2 + 0.5D, 8D);
+               if(entityplayer1 != null && entityplayer1.getDistanceSq((double)j2 + 0.5D, (double)j3 + 0.5D, (double)l2 + 0.5D) > 4D) {
+                  playSoundEffect((double)j2 + 0.5D, (double)j3 + 0.5D, (double)l2 + 0.5D, "ambient.cave.cave", 0.7F, 0.8F + rand.nextFloat() * 0.2F);
+                  ambientTickCountdown = rand.nextInt(12000) + 6000;
+               }
+            }
+         }
+         int l1 = 0;
+         while(l1 < 80) {
+            updateLCG = updateLCG * 3 + DIST_HASH_MAGIC;
+            int k2 = updateLCG >> 2;
+            int i3 = k2 & 0xf;
+            int k3 = k2 >> 8 & 0xf;
+            int i4 = k2 >> 16 & 0x7f;
+            byte byte1 = chunk.blocks[i3 << 11 | k3 << 7 | i4];
+            if(Block.tickOnLoad[byte1]) {
+               Block.blocksList[byte1].updateTick(this, i3 + k, i4, k3 + i1, rand);
+            }
+            l1++;
+         }
+      }
    }
 
    public boolean tickUpdates(boolean pFlag) {

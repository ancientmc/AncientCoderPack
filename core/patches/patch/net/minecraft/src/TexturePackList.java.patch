--- a/net/minecraft/src/TexturePackList.java
+++ b/net/minecraft/src/TexturePackList.java
@@ -1,10 +1,8 @@
 package net.minecraft.src;
 
 import java.io.File;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
+import java.io.IOException;
+import java.util.*;
 import net.minecraft.client.Minecraft;
 
 public class TexturePackList {
@@ -43,7 +41,47 @@
    }
 
    public void updateAvaliableTexturePacks() {
-      // $FF: Couldn't be decompiled
+      ArrayList arraylist = new ArrayList();
+      selectedTexturePack = null;
+      arraylist.add(defaultTexturePack);
+      if (texturePackDir.exists() && texturePackDir.isDirectory()) {
+         File afile[] = texturePackDir.listFiles();
+         File afile1[] = afile;
+         int i = afile1.length;
+         for (int j = 0; j < i; j++) {
+            File file = afile1[j];
+            if (!file.isFile() || !file.getName().toLowerCase().endsWith(".zip")) {
+               continue;
+            }
+            String s = (new StringBuilder()).append(file.getName()).append(":").append(file.length()).append(":").append(file.lastModified()).toString();
+            try {
+               if (!field_6538_d.containsKey(s)) {
+                  TexturePackCustom texturepackcustom = new TexturePackCustom(file);
+                  texturepackcustom.texturePackID = s;
+                  field_6538_d.put(s, texturepackcustom);
+                  texturepackcustom.func_6485_a(mc);
+               }
+               TexturePackBase texturepackbase1 = (TexturePackBase) field_6538_d.get(s);
+               if (texturepackbase1.texturePackFileName.equals(currentTexturePack)) {
+                  selectedTexturePack = texturepackbase1;
+               }
+               arraylist.add(texturepackbase1);
+            } catch (IOException ioexception) {
+               ioexception.printStackTrace();
+            }
+         }
+      }
+      if (selectedTexturePack == null) {
+         selectedTexturePack = defaultTexturePack;
+      }
+      availableTexturePacks.removeAll(arraylist);
+      TexturePackBase texturepackbase;
+      for (Iterator iterator = availableTexturePacks.iterator(); iterator.hasNext(); field_6538_d.remove(texturepackbase.texturePackID)) {
+         texturepackbase = (TexturePackBase) iterator.next();
+         texturepackbase.unbindThumbnailTexture(mc);
+      }
+
+      availableTexturePacks = arraylist;
    }
 
    public List availableTexturePacks() {

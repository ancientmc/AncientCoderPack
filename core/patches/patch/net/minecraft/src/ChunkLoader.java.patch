--- a/net/minecraft/src/ChunkLoader.java
+++ b/net/minecraft/src/ChunkLoader.java
@@ -3,6 +3,7 @@
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
+import java.util.Iterator;
 
 public class ChunkLoader implements IChunkLoader {
    private File saveDir;
@@ -132,22 +133,23 @@
       NBTTagList nbttaglist = new NBTTagList();
 
       for(int i = 0; i < chunk.entities.length; ++i) {
-         for(Entity entity : chunk.entities[i]) {
-            chunk.hasEntities = true;
-            NBTTagCompound nbttagcompound = new NBTTagCompound();
-            if (entity.addEntityID(nbttagcompound)) {
-               nbttaglist.appendTag(nbttagcompound);
-            }
+         Iterator iterator = chunk.entities[i].iterator();
+         Entity entity = (Entity)iterator.next();
+         chunk.hasEntities = true;
+         NBTTagCompound nbttagcompound1 = new NBTTagCompound();
+         if(entity.addEntityID(nbttagcompound1)) {
+            nbttaglist.appendTag(nbttagcompound1);
          }
       }
 
       nbtTagCompound.setTag("Entities", nbttaglist);
       NBTTagList nbttaglist1 = new NBTTagList();
+      NBTTagCompound nbttagcompound2;
 
-      for(TileEntity tileentity : chunk.chunkTileEntityMap.values()) {
-         NBTTagCompound nbttagcompound1 = new NBTTagCompound();
-         tileentity.writeToNBT(nbttagcompound1);
-         nbttaglist1.appendTag(nbttagcompound1);
+      for(Iterator iterator1 = chunk.chunkTileEntityMap.values().iterator(); iterator1.hasNext(); nbttaglist1.appendTag(nbttagcompound2)) {
+         TileEntity tileentity = (TileEntity)iterator1.next();
+         nbttagcompound2 = new NBTTagCompound();
+         tileentity.writeToNBT(nbttagcompound2);
       }
 
       nbtTagCompound.setTag("TileEntities", nbttaglist1);

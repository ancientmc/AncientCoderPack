--- a/net/minecraft/src/ChunkLoader.java
+++ b/net/minecraft/src/ChunkLoader.java
@@ -3,6 +3,7 @@
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
+import java.util.Iterator;
 
 public class ChunkLoader implements IChunkLoader {
    private File saveDir;
@@ -132,10 +133,13 @@
       NBTTagList nbttaglist = new NBTTagList();
 
       for(int i = 0; i < chunk.entities.length; ++i) {
-         for(Entity entity : chunk.entities[i]) {
+         Iterator iterator = chunk.entities[i].iterator();
+
+         while(iterator.hasNext()) {
+            Entity entity = (Entity)iterator.next();
             chunk.hasEntities = true;
             NBTTagCompound nbttagcompound = new NBTTagCompound();
-            if (entity.addEntityID(nbttagcompound)) {
+            if(entity.addEntityID(nbttagcompound)) {
                nbttaglist.appendTag(nbttagcompound);
             }
          }
@@ -143,12 +147,15 @@
 
       nbtTagCompound.setTag("Entities", nbttaglist);
       NBTTagList nbttaglist1 = new NBTTagList();
+      NBTTagCompound nbttagcompound1 = new NBTTagCompound();
+      Iterator iterator1 = chunk.chunkTileEntityMap.values().iterator();
 
-      for(TileEntity tileentity : chunk.chunkTileEntityMap.values()) {
-         NBTTagCompound nbttagcompound1 = new NBTTagCompound();
+      while(iterator1.hasNext()) {
+         TileEntity tileentity = (TileEntity)iterator1.next();
          tileentity.writeToNBT(nbttagcompound1);
          nbttaglist1.appendTag(nbttagcompound1);
       }
+
 
       nbtTagCompound.setTag("TileEntities", nbttaglist1);
    }

--- a/net/minecraft/src/RenderEngine.java
+++ b/net/minecraft/src/RenderEngine.java
@@ -6,10 +6,7 @@
 import java.io.InputStream;
 import java.nio.ByteBuffer;
 import java.nio.IntBuffer;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
+import java.util.*;
 import javax.imageio.ImageIO;
 import org.lwjgl.opengl.GL11;
 
@@ -33,14 +30,14 @@
 
    public int getTexture(String textureName) {
       TexturePackBase texturepackbase = this.texturePack.selectedTexturePack;
-      int i = (Integer)this.textureMap.get(textureName);
-      if (i != null) {
-         return i;
+      Integer integer = (Integer)this.textureMap.get(textureName);
+      if (integer != null) {
+         return integer;
       } else {
          try {
             this.singleIntBuffer.clear();
             GLAllocation.generateTextureNames(this.singleIntBuffer);
-            i = this.singleIntBuffer.get(0);
+            int i = this.singleIntBuffer.get(0);
             if (textureName.startsWith("##")) {
                this.setupTexture(this.unwrapImageByColumns(this.readTextureImage(texturepackbase.getResourceAsStream(textureName.substring(2)))), i);
             } else if (textureName.startsWith("%clamp%")) {
@@ -315,17 +312,21 @@
 
    public void refreshTextures() {
       TexturePackBase texturepackbase = this.texturePack.selectedTexturePack;
+      int i;
+      BufferedImage bufferedimage;
 
-      for(int i : this.textureNameToImageMap.keySet()) {
-         BufferedImage bufferedimage = (BufferedImage)this.textureNameToImageMap.get(i);
-         this.setupTexture(bufferedimage, i);
+      for(Iterator iterator = this.textureNameToImageMap.keySet().iterator(); iterator.hasNext(); this.setupTexture(bufferedimage, i)) {
+         i = ((Integer)iterator.next()).intValue();
+         bufferedimage = (BufferedImage)this.textureNameToImageMap.get(Integer.valueOf(i));
       }
 
-      for(ThreadDownloadImageData threaddownloadimagedata : this.urlToImageDataMap.values()) {
+      for(Iterator iterator1 = this.urlToImageDataMap.values().iterator(); iterator1.hasNext(); ) {
+         ThreadDownloadImageData threaddownloadimagedata = (ThreadDownloadImageData)iterator1.next();
          threaddownloadimagedata.textureSetupComplete = false;
       }
 
-      for(String s : this.textureMap.keySet()) {
+      for(Iterator iterator2 = this.textureMap.keySet().iterator(); iterator2.hasNext(); ) {
+         String s = (String)iterator2.next();
          try {
             BufferedImage bufferedimage1;
             if (s.startsWith("##")) {
@@ -340,7 +341,7 @@
                bufferedimage1 = this.readTextureImage(texturepackbase.getResourceAsStream(s));
             }
 
-            int j = this.textureMap.get(s);
+            int j = ((Integer)this.textureMap.get(s)).intValue();
             this.setupTexture(bufferedimage1, j);
             this.blurTexture = false;
             this.clampTexture = false;
